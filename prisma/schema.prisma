// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      UserRole
  Admin     Admin?

  @@map("users")
}

model Admin {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String
  profileImage String?
  phone        String
  address      String
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("admins")
}

model Experience {
  id          String   @id @default(uuid())
  companyName String
  companyLogo String?
  totalYears  String
  designation String
  description String?
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("experiences")
}

model Blog {
  id          String   @id @default(uuid())
  title       String
  image       String
  description String?
  categories  String[]
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("blogs")
}

model Technology {
  id        String   @id @default(uuid())
  name      String
  logo      String
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  skill             Skill?
  projectTechnology ProjectTechnology[]

  @@map("technologies")
}

model Skill {
  id           String     @id @default(uuid())
  isDeleted    Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  technologyId String     @unique
  technology   Technology @relation(fields: [technologyId], references: [id])

  @@map("skills")
}

model ProjectTechnology {
  id           String @id @default(uuid())
  projectId    String
  technologyId String

  project    Project    @relation(fields: [projectId], references: [id])
  technology Technology @relation(fields: [technologyId], references: [id])

  @@map("projectTechnologies")
}

model ProjectLink {
  id        String   @id @default(uuid())
  name      String
  link      String
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projectId String

  project Project @relation(fields: [projectId], references: [id])

  @@map("projectLinks")
}

model Project {
  id                String              @id @default(uuid())
  name              String
  images            String[]
  description       String?
  category          String
  isDeleted         Boolean             @default(false)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  projectLink       ProjectLink[]
  projectTechnology ProjectTechnology[]

  @@map("projects")
}

enum UserRole {
  ADMIN
}
